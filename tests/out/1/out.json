{
  "file": {
    "classes_or_functions": [
      {
        "Class": {
          "word": "A",
          "opt_inheritance": [
            {
              "ClassInheritance": {
                "MultipleInheritanceNode": {
                  "typenames": [
                    {
                      "Typename": {
                        "word": "F",
                        "typenameExtensions": [
                          {
                            "TemplateTypename": {
                              "TypenameList": {
                                "types": [
                                  {
                                    "Typename": {
                                      "word": "H",
                                      "typenameExtensions": [
                                        {
                                          "TemplateTypename": {
                                            "TypenameList": {
                                              "types": [
                                                {
                                                  "Typename": {
                                                    "word": "T",
                                                    "typenameExtensions": []
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "Typename": {
                                      "word": "I",
                                      "typenameExtensions": []
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ],
          "classElements": [
            {
              "Indent": 1,
              "ClassElement": {
                "using": {
                  "Method": {
                    "ClassMemberQualifiers": {
                      "opt_ppp": [
                        {
                          "PPPQualifier": {
                            "TokenNode": "private"
                          }
                        }
                      ],
                      "opt_static": [
                        {}
                      ]
                    },
                    "Typename": {
                      "word": "E",
                      "typenameExtensions": [
                        {
                          "TemplateTypename": {
                            "TypenameListNodeEndingWithRShift": {
                              "typenames": [],
                              "word": "F",
                              "list": {
                                "types": [
                                  {
                                    "Typename": {
                                      "word": "H",
                                      "typenameExtensions": []
                                    }
                                  },
                                  {
                                    "Typename": {
                                      "word": "I",
                                      "typenameExtensions": []
                                    }
                                  }
                                ]
                              },
                              "opt_trailing_comma": []
                            }
                          }
                        },
                        {
                          "NSTypename": {
                            "NSTypename": {
                              "word": "G",
                              "typenameExtensions": []
                            }
                          }
                        }
                      ]
                    },
                    "word": "method1",
                    "ArgumentsSignature": {
                      "arguments": [
                        {
                          "Typename": {
                            "word": "K",
                            "typenameExtensions": []
                          },
                          "word": "k"
                        },
                        {
                          "Typename": {
                            "word": "U",
                            "typenameExtensions": []
                          },
                          "word": "u"
                        },
                        {
                          "Typename": {
                            "word": "R",
                            "typenameExtensions": [
                              {
                                "TemplateTypename": {
                                  "TypenameList": {
                                    "types": [
                                      {
                                        "Typename": {
                                          "word": "U",
                                          "typenameExtensions": []
                                        }
                                      },
                                      {
                                        "Typename": {
                                          "word": "E",
                                          "typenameExtensions": [
                                            {
                                              "TemplateTypename": {
                                                "TypenameList": {
                                                  "types": [
                                                    {
                                                      "Typename": {
                                                        "word": "H",
                                                        "typenameExtensions": []
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "Typename": {
                                          "word": "I",
                                          "typenameExtensions": []
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "NSTypename": {
                                  "NSTypename": {
                                    "word": "V",
                                    "typenameExtensions": []
                                  }
                                }
                              }
                            ]
                          },
                          "word": "kuv"
                        }
                      ]
                    },
                    "ColonIndentCodeBlock": {
                      "CodeBlock": {
                        "statements": [
                          {
                            "Statement": {
                              "Indent": 2,
                              "ForStatement": {
                                "iterators": [
                                  {
                                    "iteratorName": "i"
                                  }
                                ],
                                "ExpressionNode": {
                                  "AssignmentExpressionNode": {
                                    "ConditionalExpressionNode": {
                                      "OrExpressionNode": {
                                        "AndExpressionNode": {
                                          "EqualityExpressionNode": {
                                            "CompareExpressionNode": {
                                              "AdditiveExpressionNode": {
                                                "MultiplicativeExpressionNode": {
                                                  "UnaryExpression": {
                                                    "PostfixExpressionNode": {
                                                      "ParenExpression": {
                                                        "Typename": {
                                                          "word": "arr",
                                                          "typenameExtensions": []
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "opt_if": [],
                                "opt_while": [],
                                "ColonIndentCodeBlock": {
                                  "CodeBlock": {
                                    "statements": []
                                  }
                                }
                              }
                            }
                          },
                          {
                            "Statement": {
                              "Indent": 2,
                              "ForStatement": {
                                "iterators": [
                                  {
                                    "iteratorName": "i"
                                  }
                                ],
                                "ExpressionNode": {
                                  "AssignmentExpressionNode": {
                                    "ConditionalExpressionNode": {
                                      "OrExpressionNode": {
                                        "AndExpressionNode": {
                                          "EqualityExpressionNode": {
                                            "CompareExpressionNode": {
                                              "AdditiveExpressionNode": {
                                                "MultiplicativeExpressionNode": {
                                                  "UnaryExpression": {
                                                    "PostfixExpressionNode": {
                                                      "ParenExpression": {
                                                        "Typename": {
                                                          "word": "someContainer",
                                                          "typenameExtensions": []
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "opt_if": [],
                                "opt_while": [],
                                "ColonIndentCodeBlock": {
                                  "CodeBlock": {
                                    "statements": []
                                  }
                                }
                              }
                            }
                          },
                          {
                            "Statement": {
                              "Indent": 2,
                              "ForStatement": {
                                "iterators": [
                                  {
                                    "iteratorName": "i"
                                  }
                                ],
                                "ExpressionNode": {
                                  "AssignmentExpressionNode": {
                                    "ConditionalExpressionNode": {
                                      "OrExpressionNode": {
                                        "AndExpressionNode": {
                                          "EqualityExpressionNode": {
                                            "CompareExpressionNode": {
                                              "AdditiveExpressionNode": {
                                                "MultiplicativeExpressionNode": {
                                                  "UnaryExpression": {
                                                    "PostfixExpressionNode": {
                                                      "ParenExpression": {
                                                        "Typename": {
                                                          "word": "std",
                                                          "typenameExtensions": [
                                                            {
                                                              "NSTypename": {
                                                                "NSTypename": {
                                                                  "word": "f",
                                                                  "typenameExtensions": [
                                                                    {
                                                                      "NSTypename": {
                                                                        "NSTypename": {
                                                                          "word": "f",
                                                                          "typenameExtensions": [
                                                                            {
                                                                              "TemplateTypename": {
                                                                                "TypenameList": {
                                                                                  "types": [
                                                                                    {
                                                                                      "Typename": {
                                                                                        "word": "f",
                                                                                        "typenameExtensions": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "opt_if": [],
                                "opt_while": [],
                                "ColonIndentCodeBlock": {
                                  "CodeBlock": {
                                    "statements": []
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            {
              "Indent": 1,
              "ClassElement": {
                "using": {
                  "MemberVariable": {
                    "ClassMemberQualifiers": {
                      "opt_ppp": [],
                      "opt_static": []
                    },
                    "Typename": {
                      "word": "B",
                      "typenameExtensions": [
                        {
                          "NSTypename": {
                            "NSTypename": {
                              "word": "T",
                              "typenameExtensions": [
                                {
                                  "TemplateTypename": {
                                    "TypenameList": {
                                      "types": [
                                        {
                                          "Typename": {
                                            "word": "U",
                                            "typenameExtensions": []
                                          }
                                        },
                                        {
                                          "Typename": {
                                            "word": "V",
                                            "typenameExtensions": []
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "PointerTypename": {}
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "varname": "member1"
                  }
                }
              }
            }
          ]
        }
      }
    ]
  }
}
