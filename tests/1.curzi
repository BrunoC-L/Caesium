class A<B>:
class B:
class T:
    A<B> t

class F<A,B>:

class E<A>:
    using G = A
    using T = F

class A extends G<V,F>:
    using C = A<B>
    using K = F<B,C>
    E<K>::T<B,C> member1
    E<K>::G method1(K k, C u):
        Set<int> someContainer
        for i in someContainer:

        int[] arr
        for i in arr:

        Map<int, std::string> m
        for k, v in m:
